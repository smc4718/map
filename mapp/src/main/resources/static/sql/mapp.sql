-- 시퀀스 삭제
DROP SEQUENCE USER_SEQ;
DROP SEQUENCE NOTICE_SEQ;
DROP SEQUENCE NOTICE_IMAGE_SEQ;
DROP SEQUENCE REFERRAL_SEQ;

-- 시퀀스 생성
CREATE SEQUENCE USER_SEQ NOCACHE;
CREATE SEQUENCE NOTICE_SEQ NOCACHE;
CREATE SEQUENCE NOTICE_IMAGE_SEQ NOCACHE;
CREATE SEQUENCE REFERRAL_SEQ NOCACHE;

-- 테이블 삭제
DROP TABLE REFERRAL_T;
DROP TABLE NOTICE_IMAGE_T;
DROP TABLE NOTICE_T;
DROP TABLE USER_T;

-- 회원 테이블
CREATE TABLE USER_T (
	USER_NO	        NUMBER	            NOT NULL,
    ID              VARCHAR2(20 BYTE)	NOT NULL UNIQUE,
	PW	            VARCHAR2(64 BYTE)	NOT NULL,
	NAME	        VARCHAR2(50 BYTE),
	GENDER	        VARCHAR2(2 BYTE),
    EMAIL           VARCHAR2(50 BYTE),
	HP	            VARCHAR2(20 BYTE),
    REFERRAL_CODE   VARCHAR2(20)                 UNIQUE,
    ROLE            VARCHAR2(20),
	JOINED_AT	    DATE
);

-- 공지
CREATE TABLE NOTICE_T (
	NOTICE_NO	NUMBER	            NOT NULL,
    USER_NO	    NUMBER	            NOT NULL,
	TITLE	    VARCHAR2(500 BYTE)	NOT NULL,
	CONTENTS	CLOB,
	HIT	        NUMBER              DEFAULT 0,
	CREATED_AT	VARCHAR2(30 BYTE)
);

-- 공지 이미지
CREATE TABLE NOTICE_IMAGE_T (
	NOTICE_NO	        NUMBER	            NOT NULL,
	IMAGE_PATH	        VARCHAR2(100 BYTE),
	FILESYSTEM_NAME 	VARCHAR2(100 BYTE)
);

-- 추천 관계
CREATE TABLE REFERRAL_T (
    REFERRAL_NO     NUMBER              NOT NULL,
    REFERRER_NO     NUMBER              NOT NULL,  -- 추천한 사람
    REFERRED_NO     NUMBER              NOT NULL,  -- 추천받은 사람
    CREATED_AT      DATE DEFAULT SYSDATE
);

-- PK
ALTER TABLE USER_T ADD CONSTRAINT PK_USER_T PRIMARY KEY (USER_NO);

ALTER TABLE NOTICE_T ADD CONSTRAINT PK_NOTICE_T PRIMARY KEY (NOTICE_NO);

ALTER TABLE REFERRAL_T ADD CONSTRAINT PK_REFERRAL_T PRIMARY KEY (REFERRAL_NO);

-- FK

ALTER TABLE NOTICE_IMAGE_T ADD CONSTRAINT FK_NOTICE_T_TO_NOTICE_IMAGE_T_1 FOREIGN KEY (NOTICE_NO) 
REFERENCES NOTICE_T (NOTICE_NO) ON DELETE CASCADE;

ALTER TABLE NOTICE_T ADD CONSTRAINT FK_USER_T_TO_NOTICE_T_1 FOREIGN KEY (USER_NO) 
REFERENCES USER_T (USER_NO) ON DELETE CASCADE;

ALTER TABLE REFERRAL_T ADD CONSTRAINT FK_REFERRAL_REFERRER FOREIGN KEY (REFERRER_NO) 
REFERENCES USER_T(USER_NO) ON DELETE CASCADE;

ALTER TABLE REFERRAL_T ADD CONSTRAINT FK_REFERRAL_REFERRED FOREIGN KEY (REFERRED_NO) 
REFERENCES USER_T(USER_NO) ON DELETE CASCADE;

--- INSERT ---

-- 회원
INSERT INTO USER_T VALUES(1, 'a', STANDARD_HASH('1', 'SHA256'), 'MAPP마스터', 'M', 'mapp@naver.com', '01011112222', 'ABCDEFGH', 'ADMIN', TO_DATE('250207', 'YYMMDD'));
INSERT INTO USER_T VALUES(2, 'b', STANDARD_HASH('2', 'SHA256'), 'A회원', 'F', 'member@naver.com', '01022223333', 'IJKLMNOP', 'USER', TO_DATE('250309', 'YYMMDD'));
INSERT INTO USER_T VALUES(3, 'user3', STANDARD_HASH('pw3', 'SHA256'), '회원3', 'M', 'user3@naver.com', '01010030003', 'RCODE03', 'USER', TO_DATE('250301', 'YYMMDD'));
INSERT INTO USER_T VALUES(4, 'user4', STANDARD_HASH('pw4', 'SHA256'), '회원4', 'F', 'user4@naver.com', '01010040004', 'RCODE04', 'USER', TO_DATE('250302', 'YYMMDD'));
INSERT INTO USER_T VALUES(5, 'user5', STANDARD_HASH('pw5', 'SHA256'), '회원5', 'M', 'user5@naver.com', '01010050005', 'RCODE05', 'USER', TO_DATE('250303', 'YYMMDD'));
INSERT INTO USER_T VALUES(6, 'user6', STANDARD_HASH('pw6', 'SHA256'), '회원6', 'F', 'user6@naver.com', '01010060006', 'RCODE06', 'USER', TO_DATE('250304', 'YYMMDD'));
INSERT INTO USER_T VALUES(7, 'user7', STANDARD_HASH('pw7', 'SHA256'), '회원7', 'M', 'user7@naver.com', '01010070007', 'RCODE07', 'USER', TO_DATE('250305', 'YYMMDD'));
INSERT INTO USER_T VALUES(8, 'user8', STANDARD_HASH('pw8', 'SHA256'), '회원8', 'F', 'user8@naver.com', '01010080008', 'RCODE08', 'USER', TO_DATE('250306', 'YYMMDD'));
INSERT INTO USER_T VALUES(9, 'user9', STANDARD_HASH('pw9', 'SHA256'), '회원9', 'M', 'user9@naver.com', '01010090009', 'RCODE09', 'USER', TO_DATE('250307', 'YYMMDD'));
INSERT INTO USER_T VALUES(10, 'user10', STANDARD_HASH('pw10', 'SHA256'), '회원10', 'F', 'user10@naver.com', '01010100010', 'RCODE10', 'USER', TO_DATE('250308', 'YYMMDD'));
INSERT INTO USER_T VALUES(11, 'user11', STANDARD_HASH('pw11', 'SHA256'), '회원11', 'M', 'user11@naver.com', '01010110011', 'RCODE11', 'USER', TO_DATE('250309', 'YYMMDD'));
INSERT INTO USER_T VALUES(12, 'user12', STANDARD_HASH('pw12', 'SHA256'), '회원12', 'F', 'user12@naver.com', '01010120012', 'RCODE12', 'USER', TO_DATE('250310', 'YYMMDD'));
INSERT INTO USER_T VALUES(13, 'user13', STANDARD_HASH('pw13', 'SHA256'), '회원13', 'M', 'user13@naver.com', '01010130013', 'RCODE13', 'USER', TO_DATE('250311', 'YYMMDD'));
INSERT INTO USER_T VALUES(14, 'user14', STANDARD_HASH('pw14', 'SHA256'), '회원14', 'F', 'user14@naver.com', '01010140014', 'RCODE14', 'USER', TO_DATE('250312', 'YYMMDD'));
INSERT INTO USER_T VALUES(15, 'user15', STANDARD_HASH('pw15', 'SHA256'), '회원15', 'M', 'user15@naver.com', '01010150015', 'RCODE15', 'USER', TO_DATE('250313', 'YYMMDD'));
INSERT INTO USER_T VALUES(16, 'user16', STANDARD_HASH('pw16', 'SHA256'), '회원16', 'F', 'user16@naver.com', '01010160016', 'RCODE16', 'USER', TO_DATE('250314', 'YYMMDD'));
INSERT INTO USER_T VALUES(17, 'user17', STANDARD_HASH('pw17', 'SHA256'), '회원17', 'M', 'user17@naver.com', '01010170017', 'RCODE17', 'USER', TO_DATE('250315', 'YYMMDD'));
INSERT INTO USER_T VALUES(18, 'user18', STANDARD_HASH('pw18', 'SHA256'), '회원18', 'F', 'user18@naver.com', '01010180018', 'RCODE18', 'USER', TO_DATE('250316', 'YYMMDD'));
INSERT INTO USER_T VALUES(19, 'user19', STANDARD_HASH('pw19', 'SHA256'), '회원19', 'M', 'user19@naver.com', '01010190019', 'RCODE19', 'USER', TO_DATE('250317', 'YYMMDD'));
INSERT INTO USER_T VALUES(20, 'user20', STANDARD_HASH('pw20', 'SHA256'), '회원20', 'F', 'user20@naver.com', '01010200020', 'RCODE20', 'USER', TO_DATE('250318', 'YYMMDD'));
INSERT INTO USER_T VALUES(21, 'user21', STANDARD_HASH('pw21', 'SHA256'), '회원21', 'M', 'user21@naver.com', '01010210021', 'RCODE21', 'USER', TO_DATE('250319', 'YYMMDD'));
INSERT INTO USER_T VALUES(22, 'user22', STANDARD_HASH('pw22', 'SHA256'), '회원22', 'F', 'user22@naver.com', '01010220022', 'RCODE22', 'USER', TO_DATE('250320', 'YYMMDD'));

-- 추천 관계
INSERT INTO REFERRAL_T VALUES (1, 3, 1, SYSDATE);   -- user3 → MAPP마스터
INSERT INTO REFERRAL_T VALUES (2, 4, 1, SYSDATE);   -- user4 → MAPP마스터
INSERT INTO REFERRAL_T VALUES (3, 5, 1, SYSDATE);   -- user5 → MAPP마스터
INSERT INTO REFERRAL_T VALUES (4, 6, 2, SYSDATE);   -- user6 → A회원
INSERT INTO REFERRAL_T VALUES (5, 7, 2, SYSDATE);   -- user7 → A회원
INSERT INTO REFERRAL_T VALUES (6, 8, 2, SYSDATE);   -- user8 → A회원
INSERT INTO REFERRAL_T VALUES (7, 9, 3, SYSDATE);   -- user9 → user3
INSERT INTO REFERRAL_T VALUES (8, 10, 3, SYSDATE);  -- user10 → user3
INSERT INTO REFERRAL_T VALUES (9, 11, 3, SYSDATE);  -- user11 → user3
INSERT INTO REFERRAL_T VALUES (10, 12, 4, SYSDATE); -- user12 → user4
INSERT INTO REFERRAL_T VALUES (11, 13, 4, SYSDATE); -- user13 → user4
INSERT INTO REFERRAL_T VALUES (12, 14, 5, SYSDATE); -- user14 → user5
INSERT INTO REFERRAL_T VALUES (13, 15, 5, SYSDATE); -- user15 → user5
INSERT INTO REFERRAL_T VALUES (14, 16, 6, SYSDATE); -- user16 → user6
INSERT INTO REFERRAL_T VALUES (15, 17, 6, SYSDATE); -- user17 → user6
INSERT INTO REFERRAL_T VALUES (16, 18, 7, SYSDATE); -- user18 → user7
INSERT INTO REFERRAL_T VALUES (17, 19, 8, SYSDATE); -- user19 → user8
INSERT INTO REFERRAL_T VALUES (18, 20, 9, SYSDATE); -- user20 → user9
INSERT INTO REFERRAL_T VALUES (19, 21, 10, SYSDATE);-- user21 → user10
INSERT INTO REFERRAL_T VALUES (20, 22, 10, SYSDATE);-- user22 → user10

-- USER_T가 존재할 경우, 최대값 + 1 을 기준으로 시퀀스를 재생성 (DB를 자주 초기화하며 확인해서, USER_NO 중복값 에러 생기지 않게 넣어둠)
DECLARE
    v_max NUMBER;
BEGIN
    SELECT NVL(MAX(USER_NO), 0) + 1 INTO v_max FROM USER_T;
    
    EXECUTE IMMEDIATE 'DROP SEQUENCE USER_SEQ';
    EXECUTE IMMEDIATE 'CREATE SEQUENCE USER_SEQ START WITH ' || v_max || ' NOCACHE';
END;

COMMIT;